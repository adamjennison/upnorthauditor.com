<?php

/**
 * BaseSpend
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $spenddate
 * @property string $transactionnumber
 * @property decimal $amount
 * @property string $suppliername
 * @property string $suppliernamesoundex
 * @property integer $supplier_id
 * @property string $suppliernumber
 * @property string $directoratename
 * @property integer $directorate_id
 * @property string $servicename
 * @property integer $service_id
 * @property Supplier $supplier
 * @property Directorate $directorate
 * @property Service $service
 * 
 * @method integer     getId()                  Returns the current record's "id" value
 * @method date        getSpenddate()           Returns the current record's "spenddate" value
 * @method string      getTransactionnumber()   Returns the current record's "transactionnumber" value
 * @method decimal     getAmount()              Returns the current record's "amount" value
 * @method string      getSuppliername()        Returns the current record's "suppliername" value
 * @method string      getSuppliernamesoundex() Returns the current record's "suppliernamesoundex" value
 * @method integer     getSupplierId()          Returns the current record's "supplier_id" value
 * @method string      getSuppliernumber()      Returns the current record's "suppliernumber" value
 * @method string      getDirectoratename()     Returns the current record's "directoratename" value
 * @method integer     getDirectorateId()       Returns the current record's "directorate_id" value
 * @method string      getServicename()         Returns the current record's "servicename" value
 * @method integer     getServiceId()           Returns the current record's "service_id" value
 * @method Supplier    getSupplier()            Returns the current record's "supplier" value
 * @method Directorate getDirectorate()         Returns the current record's "directorate" value
 * @method Service     getService()             Returns the current record's "service" value
 * @method Spend       setId()                  Sets the current record's "id" value
 * @method Spend       setSpenddate()           Sets the current record's "spenddate" value
 * @method Spend       setTransactionnumber()   Sets the current record's "transactionnumber" value
 * @method Spend       setAmount()              Sets the current record's "amount" value
 * @method Spend       setSuppliername()        Sets the current record's "suppliername" value
 * @method Spend       setSuppliernamesoundex() Sets the current record's "suppliernamesoundex" value
 * @method Spend       setSupplierId()          Sets the current record's "supplier_id" value
 * @method Spend       setSuppliernumber()      Sets the current record's "suppliernumber" value
 * @method Spend       setDirectoratename()     Sets the current record's "directoratename" value
 * @method Spend       setDirectorateId()       Sets the current record's "directorate_id" value
 * @method Spend       setServicename()         Sets the current record's "servicename" value
 * @method Spend       setServiceId()           Sets the current record's "service_id" value
 * @method Spend       setSupplier()            Sets the current record's "supplier" value
 * @method Spend       setDirectorate()         Sets the current record's "directorate" value
 * @method Spend       setService()             Sets the current record's "service" value
 * 
 * @package    myshelf
 * @subpackage model
 * @author     Adam Jennison
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseSpend extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('spend');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('spenddate', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('transactionnumber', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('amount', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => 10,
             'scale' => '2',
             ));
        $this->hasColumn('suppliername', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('suppliernamesoundex', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('supplier_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('suppliernumber', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('directoratename', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('directorate_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('servicename', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('service_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Supplier as supplier', array(
             'local' => 'supplier_id',
             'foreign' => 'id'));

        $this->hasOne('Directorate as directorate', array(
             'local' => 'directorate_id',
             'foreign' => 'id'));

        $this->hasOne('Service as service', array(
             'local' => 'service_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}